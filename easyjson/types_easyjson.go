// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  hconfig

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( CfgVersion ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* CfgVersion ) UnmarshalJSON([]byte) error { return nil }
func ( CfgVersion ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* CfgVersion ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_CfgVersion *CfgVersion

func ( CheckDefinition ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* CheckDefinition ) UnmarshalJSON([]byte) error { return nil }
func ( CheckDefinition ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* CheckDefinition ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_CheckDefinition *CheckDefinition

func ( Config ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Config ) UnmarshalJSON([]byte) error { return nil }
func ( Config ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Config ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Config *Config

func ( GRPCDefinition ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* GRPCDefinition ) UnmarshalJSON([]byte) error { return nil }
func ( GRPCDefinition ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* GRPCDefinition ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_GRPCDefinition *GRPCDefinition

func ( HTTPDefinition ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* HTTPDefinition ) UnmarshalJSON([]byte) error { return nil }
func ( HTTPDefinition ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* HTTPDefinition ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_HTTPDefinition *HTTPDefinition

func ( TCPDefinition ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TCPDefinition ) UnmarshalJSON([]byte) error { return nil }
func ( TCPDefinition ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TCPDefinition ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TCPDefinition *TCPDefinition

func ( TChannelDefinition ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TChannelDefinition ) UnmarshalJSON([]byte) error { return nil }
func ( TChannelDefinition ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TChannelDefinition ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TChannelDefinition *TChannelDefinition

func ( TargetPool ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TargetPool ) UnmarshalJSON([]byte) error { return nil }
func ( TargetPool ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TargetPool ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TargetPool *TargetPool
